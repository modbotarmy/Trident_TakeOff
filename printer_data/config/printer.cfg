# This file contains common pin mappings for the BIGTREETECH Kraken.
# To use this config, the firmware should be compiled for the
# STM32H723 with a "128KiB bootloader" "25 MHz crystal"
# and "USB (on PA11/PA12)" or "CAN bus (on PD0/PD1)".

# See docs/Config_Reference.md for a description of parameters.
[include KAMP_Settings.cfg]
[virtual_sdcard]
path: ~/printer_data/gcodes

[display_status]
[pause_resume]
[exclude_object]

# S1
[stepper_x]
step_pin: PC14
dir_pin: !PC13
enable_pin: !PE6
microsteps: 16
rotation_distance: 40
endstop_pin: tmc5160_stepper_x:virtual_endstop
position_endstop: 300
position_max: 300
homing_speed: 50
homing_retract_dist: 0

# S2
[stepper_y]
step_pin: PE5
dir_pin: !PE4
enable_pin: !PE3
microsteps: 16
rotation_distance: 40
endstop_pin: tmc5160_stepper_y:virtual_endstop
position_endstop: 324
position_max: 324
homing_speed: 50
homing_retract_dist: 0

# S3
# [stepper_z]
# step_pin: PE2
# dir_pin: PE1
# enable_pin: !PE0
# microsteps: 16
# rotation_distance: 8
# endstop_pin: PF1
# position_endstop: 0.5
# position_max: 200

# S4
# The Octopus only has 4 heater outputs which leaves an extra stepper
# This can be used for a second Z stepper, dual_carriage, extruder co-stepper,
# or other accesory such as an MMU
#[stepper_]
#step_pin: PB9
#dir_pin: PB8
#enable_pin: !PB7
#endstop_pin: PF2
#...

# S5
[extruder]
step_pin: PG9
dir_pin: !PG10
enable_pin: !PG13
microsteps: 16
rotation_distance: 7.272
nozzle_diameter: 0.500
filament_diameter: 1.750
heater_pin: PF6 # HE0
sensor_pin:  PB1 # T0
sensor_type: PT1000
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
min_temp: 0
max_temp: 300
max_extrude_cross_section: 15
pressure_advance: .048

#[filament_switch_sensor material_0]
#switch_pin: PF3

# S6
[stepper_z]
step_pin: PG11
dir_pin: PD7
enable_pin: !PG12
microsteps: 16
rotation_distance: 4  
endstop_pin: probe:z_virtual_endstop # use beacon as virtual endstop
homing_retract_dist: 0 # beacon needs this to be set to 0
position_max: 280
position_min: -2


# S7
[stepper_z1]
step_pin: PB4
dir_pin: PB3
enable_pin: !PB5
microsteps: 16
rotation_distance: 4  


# S8
[stepper_z2]
step_pin: PG15
dir_pin: PB6
enable_pin: !PG14
microsteps: 16
rotation_distance: 4  


[heater_bed]
heater_pin: PF5
sensor_pin: PB0 # TB
sensor_type: Generic 3950
min_temp: 0
max_temp: 130
max_power: 0.8

[multi_pin part_cooling_fan]
pins: PA0, PA1

[fan]
pin: multi_pin:part_cooling_fan
max_power: .8
kick_start_time: 0.5  
off_below: 0.10 



#[heater_fan fan2]
#pin: PA2

#[fan_generic fan3]
#pin: PA3

#[fan_generic fan4]
#pin: PA4

#[fan_generic fan5]
#pin: PA5

#[fan_generic fan6]
#pin: PA6
#tachometer_pin: PC1

#[fan_generic fan7]
#pin: PE8
#tachometer_pin: PG0

[mcu]
# serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
serial: /dev/ttyAMA0
restart_method: command

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 4500
max_z_velocity: 5
max_z_accel: 100

[input_shaper]
shaper_freq_x: 39.6
shaper_freq_y: 52.4
shaper_type: mzv

########################################
# TMC2160 configuration
########################################


[tmc5160 stepper_x]
cs_pin: PD6
spi_software_sclk_pin: PC6
spi_software_mosi_pin: PC8
spi_software_miso_pin: PC7
diag1_pin: !PC15
run_current: 1
home_current: .7
sense_resistor: 0.022
stealthchop_threshold: 0
driver_SGT: 0

[tmc5160 stepper_y]
cs_pin: PD5
spi_software_sclk_pin: PC6
spi_software_mosi_pin: PC8
spi_software_miso_pin: PC7
diag1_pin: !PF0
run_current: 1
home_current: .7
sense_resistor: 0.022
stealthchop_threshold: 0
driver_SGT: 0

# [tmc5160 stepper_z]
# cs_pin: PD4
# spi_software_sclk_pin: PC6
# spi_software_mosi_pin: PC8
# spi_software_miso_pin: PC7
# #diag1_pin: PF1
# run_current: 0.650
# sense_resistor: 0.022
# stealthchop_threshold: 999999

#[tmc5160 stepper_]
#cs_pin: PD3
#spi_software_sclk_pin: PC6
#spi_software_mosi_pin: PC8
#spi_software_miso_pin: PC7
##diag1_pin: PF2
#run_current: 0.800
#sense_resistor: 0.022
#stealthchop_threshold: 999999

[tmc5160 extruder]
cs_pin: PD2
spi_software_sclk_pin: PC6
spi_software_mosi_pin: PC8
spi_software_miso_pin: PC7
run_current: 0.800
sense_resistor: 0.075
stealthchop_threshold: 999999

[tmc5160 stepper_z]
cs_pin: PA15
spi_software_sclk_pin: PC6
spi_software_mosi_pin: PC8
spi_software_miso_pin: PC7
run_current: 0.800
sense_resistor: 0.075
stealthchop_threshold: 999999

[tmc5160 stepper_z1]
cs_pin: PA9
spi_software_sclk_pin: PC6
spi_software_mosi_pin: PC8
spi_software_miso_pin: PC7
run_current: 0.800
sense_resistor: 0.075
stealthchop_threshold: 999999

[tmc5160 stepper_z2]
cs_pin: PA10
spi_software_sclk_pin: PC6
spi_software_mosi_pin: PC8
spi_software_miso_pin: PC7
run_current: 0.800
sense_resistor: 0.075
stealthchop_threshold: 999999

[board_pins]
aliases:
    # FPC header, Aliases EXP1 & EXP2 for mini12864
    EXP1_1=PG5, EXP1_2=PG4,
    EXP1_3=PG3, EXP1_4=PG2,
    EXP1_5=PD15, EXP1_6=PD14,
    EXP1_7=PD13, EXP1_8=PD12,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PE13, EXP2_2=PE12,
    EXP2_3=PG8, EXP2_4=PE11,
    EXP2_5=PG7, EXP2_6=PE14,
    EXP2_7=PG6, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<NC>


[beacon]
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevH_F82E509A5154364134202020FF15041D-if00
x_offset: -24 # update with offset from nozzle on your machine
y_offset: 0 # update with offset from nozzle on your machine
mesh_main_direction: x
mesh_runs: 2
mesh_overscan: 10

[resonance_tester]
accel_chip: beacon
probe_points: 150, 150, 20



[bed_mesh]
speed: 300
horizontal_move_z: 10
mesh_min: 40, 40
mesh_max: 260,260
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5
algorithm: bicubic


[z_tilt]

z_positions:
  -50, 18
  150, 348
  350, 18
  
points:
  54, 20
  170, 270
  290, 20

speed: 300
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.2

[safe_z_home]
home_xy_position: 150, 150 # update for your machine
z_hop: 5


# [gcode_macro SENSORLESS_HOME_X]
# gcode:
#     {% set HOME_CUR = 0.700 %}
#     {% set driver_config = printer.configfile.settings['tmc5160 stepper_x'] %}
#     {% set RUN_CUR = driver_config.run_current %}
#     # Set current for sensorless homing
#     SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR}
#     # Pause to ensure driver stall flag is clear
#     G4 P2000
#     # Home
#     G28 X0
#     # Move away
#     G90
#     G1 X290 F1200
#     # Set current during print
#     SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CUR}

# [gcode_macro SENSORLESS_HOME_Y]
# gcode:
#     {% set HOME_CUR = 0.700 %}
#     {% set driver_config = printer.configfile.settings['tmc5160 stepper_y'] %}
#     {% set RUN_CUR = driver_config.run_current %}
#     # Set current for sensorless homing
#     SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR}
#     # Pause to ensure driver stall flag is clear
#     G4 P2000
#     # Home
#     G28 Y0
#     # Move away
#     G90
#     G1 Y290 F1200
#     # Set current during print
#     SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CUR}

# #just use homing override
# [safe_z_home]
# home_xy_position: 150, 150 # update for your machine
# z_hop: 3

# [homing_override]
# axes: xyz
# gcode:
#   {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

#   {% if home_all or 'X' in params %}
#     _HOME_X
#   {% endif %}
  
#   {% if home_all or 'Y' in params %}
#     _HOME_Y
#   {% endif %}
  
#   {% if home_all or 'Z' in params %}
#     G90
#     G0 X150 Y150 F6600
#     G91
#     G28 Z
#     G1 Z10
#     G90
#   {% endif %}

# [gcode_macro _HOME_X]
# gcode:
#     # Always use consistent run_current on A/B steppers during sensorless homing
#     {% set RUN_CURRENT_X = printer.configfile.settings['tmc5160 stepper_x'].run_current|float %}
#     {% set RUN_CURRENT_Y = printer.configfile.settings['tmc5160 stepper_y'].run_current|float %}
#     {% set HOME_CURRENT = 0.7 %}
#     SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
#     SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

#     # Home
#     G28 X
#     # Move away
#     M400
#     G91
#     G1 X-10 F1200
    
#     # Wait just a second… (give StallGuard registers time to clear)
#     G4 P1000
#     # Set current during print
#     SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
#     SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

# [gcode_macro _HOME_Y]
# gcode:
#     # Set current for sensorless homing
#     {% set RUN_CURRENT_X = printer.configfile.settings['tmc5160 stepper_x'].run_current|float %}
#     {% set RUN_CURRENT_Y = printer.configfile.settings['tmc5160 stepper_y'].run_current|float %}
#     {% set HOME_CURRENT = 0.6 %}
#     SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
#     SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

#     # Home
#     G28 Y
#     # Move away
#     G91
#     G1 Y-10 F1200

#     # Wait just a second… (give StallGuard registers time to clear)
#     G4 P1000
#     # Set current during print
#     SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
#     SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}


[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####

  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}



  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true

  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}



  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg

  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}


[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("40")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
  G28                   # Full home (XYZ)
  G90                   # Absolut position

 
  BED_MESH_CLEAR       # Clears old saved bed mesh (if any)



  G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
  M190 S{target_bed}                                  # Sets the target temp for the bed
   
  ##  Uncomment for Trident (Z_TILT_ADJUST)
  SET_DISPLAY_TEXT MSG="Z-tilt adjust"     # Displays info
  Z_TILT_ADJUST                            # Levels the buildplate via z_tilt_adjust
  G28 Z                                    # Homes Z again after z_tilt_adjust



  SET_DISPLAY_TEXT MSG="Bed mesh"    # Displays info
  BED_MESH_CALIBRATE ADAPTIVE=1                 # Starts bed mesh

  # Heats up the nozzle up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
  G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
  M107                                                          # Turns off partcooling fan
  M109 S{target_extruder}                                       # Heats the nozzle to printing temp
  LINE_PURGE



[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91            # Switch to relative positioning
    G1 Z10 F3000   # Raise Z axis by 10mm relative to current position
    G90            # Switch back to absolute positioning
    G28 X Y        # Home X and Y axes
    # Disable steppers
    M84


# See the sample-lcd.cfg file for definitions of common LCD displays.

#[bltouch]
#sensor_pin: ^PG1
#control_pin: PE9

# Proximity switch
#[probe]
#pin: PD11

#[output_pin ps_on_pin]
#pin: PD10

#[neopixel my_neopixel_1]
#pin: PF12

#[neopixel my_neopixel_2]
#pin: PF11

#[hall_filament_width_sensor]
#adc1: PC2
#adc2: PC3

#[adxl345]
#cs_pin: PE10
#spi_bus: spi4

#[servo servo_motor]
#pin: PE7

#i2c_bus:i2c2_PB10_PB11

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [beacon model default]
#*# model_coef = 1.5608455158714651,
#*# 	  1.899125195588873,
#*# 	  0.762099660556221,
#*# 	  0.3329727393104731,
#*# 	  0.3400041404028089,
#*# 	  0.3394152820588628,
#*# 	  -0.245480844117559,
#*# 	  -0.36402492193227154,
#*# 	  0.18562818239590134,
#*# 	  0.19808241474559404
#*# model_domain = 1.8608698594863557e-07,1.9103965786817827e-07
#*# model_range = 0.200000,5.000000
#*# model_temp = 69.736594
#*# model_offset = 0.20000
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 51.993
#*# pid_ki = 1.992
#*# pid_kd = 339.255
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 16.944
#*# pid_ki = 0.949
#*# pid_kd = 75.611
